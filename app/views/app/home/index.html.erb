<div class="container-fluid pageWrapper">
        <div class="col-2 left-nav pt-2">
            <%= image_tag('Olympic-Rings.png', class: 'olympic-rings')%>
            <div class="align-self-end text-center signUpButtonDiv">
                <%= link_to 'Sign Up', sign_up_path, class: "btn-block btn-primary signUpButton py-2" %>
            </div>
            <div class="navbar mb-4 pb-3" id="sidebar">
                <ul class="nav nav-tabs d-flex flex-column align-content-start" role="tablist">
                    <li a class="nav-item"><a class="nav-link active" href="#overview">Overview</a></li>
                    <li a class="nav-item"><a class="nav-link" href="#access">Access</a></li>
                    <li a class="nav-item"><a class="nav-link" href="#versioning">Versioning</a></li>
                    <li a class="nav-item"><a class="nav-link" href="#errors">Errors</a></li>
                    <li a class="nav-item"><a class="nav-link" href="#routes">Routes</a></li>
                    <li a class="nav-item"><a class="nav-link" href="#tryserver">Try Server</a></li>
                </ul>
            </div>
        </div>
        <div class="col-5 center-content pt-2">
            <div class="row">
                <div class="col-12 center-desc">
                    <div class="api-title d-flex align-items-end">
                        <h1 class="display-3">Olympic API</h1>
                        <span class="pb-3 pl-2 lead">v2</span>
                    </div>
                    <p class="lead">Access to historical Olympic Data from 1896-2014.</p>
                    <hr>
                    <section id="overview">
                        <h3 class="display-4">Overview</h3>
                        <p class="lead">The Olympic API is architected around REST. All requests should be made over SSL. Endpoints return data in JSON format. Current version requests return data about Olympics, Countries, Sports, Disciplines, Events, Athletes, and Medals.</p>
                    </section>
                    <hr>
                    <section id="access">
                        <h3 class="display-4">Access</h3>
                        <h3 class="my-2">Tokens</h3>
                        

                        <p class="mt-4"><span style="font-weight:bold">JSON Web Tokens expire every 2 hours</span>. To recieve a new token and continually maintain access to the API, you must request a new token. To do this make a POST request to the <code>/authenticate</code> <a href="#routes" style="text-decoration:none;">endpoint</a>. Including in the body of your request the email and password used when signing up.</p> 
                        <p class="font-weight-bold">Note: this request does not require a token.</p>

                        <code class="mt-2" style="font-size:1rem;">"email":"[YOUR EMAIL HERE]"</code>
                        <code class="mb-2" style="font-size:1rem;">"password":"[YOUR PASSWORD HERE]"</code>

                        <p class="mt-4">Once this request is made and your credentials are verified, you will recieve a response that looks like this, containing your new token.</p>

                        
                        <code class="my-2 overflow-x" style="font-size:1rem;">{"auth_token":"[YOUR NEW JSON WEB TOKEN]"}</code>

                        <p class="my-4 font-weight-bold">This token must be provided in the header of every subsequent request: </p>

                        <pre class="my-4 light-example-block">

<span class="qjquery">$</span>.<span class="key">ajax</span>({
    <span class="qjquery">url:</span> <span class="code-red">'https://olympicapi.herokuapp.com/api/athletes/19761'</span>,
    <span class="qjquery">headers:</span> {
        <span class="code-red" style="font-size:1.2rem">'Authorization'</span><span class="qjquery">:</span> <span class="code-red" style="font-size:1.2rem">[WEB TOKEN GOES HERE]</span>,
        <span class="code-red">'Accept'</span><span class="qjquery">:</span> <span class="code-red">'version=v2'</span>
    }
}).<span class="key">done</span>((<span class="qjquery">res</span>) => {  
    <span class="qgreen">console</span>.<span class="key">log</span>(<span class="qjquery">res</span>);
});</pre>

                        <h3 class="my-4">Rate Throttling</h3>
                        <p>Requests are limited to 10 calls per 10 second period per IP Address. If you reach your rate limit you will see this response and will have to wait for your rate limit to reset.</p>

                        <code style="font-size:1rem;">Rate limit reached. Please wait until throttle is reset.</code>
                        

                    </section>
                    <hr>
                    <section id="versioning">
                        <h3 class="display-4">Versioning</h3>
                        <p class="lead">The most current version of the API is version 2.</p>
                        <p class="font-weight-bold">It is highly recommended to explicitly state the version you wish to work with, even if it is the current version.</p>
                        <p class="font-weight-bold">The default version will always be the most recent version, therefore without explicitly stating the version you want, if a new version is released your application may break.</p>
                        <p>To request a specific version of the API, simply add an <code>Accept</code> header to your request.</p>
                        
                        <pre class="my-4 light-example-block">
                        
<span class="qblue">$</span>.<span class="key">ajax</span>({
    <span class="qblue">url:</span> <span class="code-red">'https://olympicapi.herokuapp.com/api/events?page=3&per_page=15'</span>,
    <span class="qblue">headers:</span> {
        <span class="code-red">'Authorization'</span><span class="qblue">:</span> <span class="code-red">[WEB TOKEN]</span>,
        <span class="code-red" style="font-size:1.2rem">'Accept'</span><span class="qblue">:</span> <span class="code-red" style="font-size:1.2rem">'version=v2'</span>
    }
}).<span class="key">done</span>((<span class="qblue">res</span>) => {  
    <span class="qgreen">console</span>.<span class="key">log</span>(<span class="qblue">res</span>);
});</pre>
                    </section>
                    <hr>
                    <section id="errors">
                        <h3 class="display-4 mb-4">Errors</h3>
                        
                        <table class="table table-responsive errors-table">
                            <thead>
                                <tr>
                                    <th>Status Code</th>
                                    <th>Error</th>
                                    <th>Corrective Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="lead">401</td>
                                    <td><code>Unauthorized</code></td>
                                    <td> - Verify your email and password are correct.</td>
                                </tr>
                                <tr>
                                    <td class="lead">404</td>
                                    <td><code>Not Found</code></td>
                                    <td> - The endpoint you are trying to reach does not exist.</td>
                                </tr>
                                <tr>
                                    <td class="lead">405</td>
                                    <td><code>Missing Token</code></td>
                                    <td> - The <code>Authorization</code> header is missing or misspelled.</td>
                                </tr>
                                <tr>
                                    <td class="lead">406</td>
                                    <td><code>Invalid Token</code></td>
                                    <td> - Verify your token is correct.
                                    <p> - Make a <code>POST</code> request for a new token.</p></td>
                                </tr>
                                <tr>
                                    <td class="lead">429</td>
                                    <td><code>Rate Limit Reached</code></td>
                                    <td> - Wait until rate limit resets.</td>
                                </tr>
                            </tbody>
                        </table>

                    </section>
                    <hr>
                    <section id="routes">
                        <h3 class="display-4 mb-4">Routes</h3>
                        <div id="pagination">
                            <h3>Pagination</h3>
                            <p class="mt-4">All requests for multiple records are paginated.</p>

                            <table class="table parameters-table">
                                <thead>
                                    <tr>
                                        <th>Parameter</th>
                                        <th>Default</th>
                                        <th>Description</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>Page</td>
                                        <td><code>1</code></td>
                                        <td>Specifies specific page.</td>
                                    </tr>
                                    <tr>
                                        <td>Per Page</td>
                                        <td><code>25</code></td>
                                        <td>Specifies the number of results per page.</td>
                                    </tr>
                                </tbody>
                            </table>

                            <p class="my-4">Here is what an example end point with these parameters may look like:</p>

                            <code style="font-size:1rem;">https://olympicapi.herokuapp.com/api/countries?page=2&per_page=30</code>
                        </div>

                        <div id="format">
                            <h3 class="my-4">Format</h3>

                            <p>All responses are returned in JSON format with a <code>meta</code> and <code>results</code> key. The <code>meta</code> key will contain meta data about pagination including the page, results per page, total number of pages, and total number of records. The <code>results</code> key will contain the requested records.</p>
                            <p class="mb-4">Here is an example response to the following endpoint:</p>
                            <code style="font-size:1rem;">https://olympicapi.herokuapp.com/api/countries?page=2&per_page=5</code>

                            <div class="code-block mt-4">
                            <pre class="light-example-block light-response-example">
{
    <span class="chrome-purple">"meta":</span> {
        <span class="chrome-purple">"pagination":</span> {
            <span class="chrome-purple">"page":</span> <span class="qblue">2</span>,
            <span class="chrome-purple">"per_page":</span> <span class="qblue">5</span>,
            <span class="chrome-purple">"total_pages":</span> <span class="qblue">44</span>,
            <span class="chrome-purple">"total_objects":</span> <span class="qblue">218</span>
        },
        <span class="chrome-purple">"links":</span> {
            <span class="chrome-purple">"first":</span> <span class="code-red">"https://olympicapi.herokuapp.com/api/countries?page=1&per_page=5"</span>,
            <span class="chrome-purple">"last":</span> <span class="code-red">"https://olympicapi.herokuapp.com/api/countries?page=44&per_page=5"</span>,
            <span class="chrome-purple">"next":</span> <span class="code-red">"https://olympicap.herokuapp.com/api/countries?page=3&per_page=5"</span>,
            <span class="chrome-purple">"prev":</span> <span class="code-red">"https://olympicap.herokuapp.com/api/countries?page=1&per_page=5</span>"
        }
    },
    <span class="chrome-purple">"results":</span> [
        {
            <span class="chrome-purple">"country_id":</span> <span class="qblue">6</span>,
            <span class="chrome-purple">"country_name":</span> <span class="code-red">"Algeria"</span>,
            <span class="chrome-purple">"IOC_code":</span> <span class="code-red">"ALG"</span>,
            <span class="chrome-purple">"olympics_hosted":</span> []
        },
        {
            <span class="chrome-purple">"country_id":</span> <span class="qblue">7</span>,
            <span class="chrome-purple">"country_name":</span> <span class="code-red">"American Samoa"</span>,
            <span class="chrome-purple">"IOC_code":</span> <span class="code-red">"ASA"</span>,
            <span class="chrome-purple">"olympics_hosted":</span> []
        },
        {
            <span class="chrome-purple">"country_id":</span> <span class="qblue">8</span>,
            <span class="chrome-purple">"country_name":</span> <span class="code-red">"Andorra"</span>,
            <span class="chrome-purple">"IOC_code":</span> <span class="code-red">"AND"</span>,
            <span class="chrome-purple">"olympics_hosted":</span> []
        },
        {
            <span class="chrome-purple">"country_id":</span> <span class="qblue">9</span>,
            <span class="chrome-purple">"country_name":</span> <span class="code-red">"Angola"</span>,
            <span class="chrome-purple">"IOC_code":</span> <span class="code-red">"ANG"</span>,
            <span class="chrome-purple">"olympics_hosted":</span> []
        },
        {
            <span class="chrome-purple">"country_id":</span> <span class="qblue">10</span>,
            <span class="chrome-purple">"country_name":</span> <span class="code-red">"Antigua and Barbuda"</span>,
            <span class="chrome-purple">"IOC_code":</span> <span class="code-red">"ANT"</span>,
            <span class="chrome-purple">"olympics_hosted":</span> []
        }
    ]
}</pre>
                            </div>
                        </div>

                        <div id="endpoints">
                            <h3 class="mt-4">Endpoints</h3>
                            <p>Data is accessible through the following endpoints. To recieve the endpoints simply make a request to:</p>
                            <code class="my-4" style="font-size:1rem;">https://olympicapi.herokuapp.com/api/endpoints</code>
                            <p class="mt-4">This will return the following JSON object.</p>

                            <div class="code-block mt-4">
                                <pre class="light-example-block light-endpoint-example">
{
    <span class="chrome-purple">"sports":</span> <span class="code-red">"https://olympicapi.herokuapp.com/api/sports"</span>,
    <span class="chrome-purple">"disciplines":</span> <span class="code-red">"https://olympicapi.herokuapp.com/api/disciplines"</span>,
    <span class="chrome-purple">"events":</span> <span class="code-red">"https://olympicapi.herokuapp.com/api/events"</span>,
    <span class="chrome-purple">"olympics":</span> <span class="code-red">"https://olympicapi.herokuapp.com/api/olympics"</span>,
    <span class="chrome-purple">"countries":</span> <span class="code-red">"https://olympicapi.herokuapp.com/api/countries"</span>,
    <span class="chrome-purple">"athletes":</span> <span class="code-red">"https://olympicapi.herokuapp.com/api/athletes"</span>,
    <span class="chrome-purple">"medals":</span> <span class="code-red">"https://olympicapi.herokuapp.com/api/medals"</span>,
    <span class="chrome-purple">"token":</span> <span class="code-red">"https://olympicapi.herokuapp.com/api/authenticate"</span>
}</pre>
                            </div>

                            <p class="my-4">The normal convention for RESTful API consumption is to store the endpoints in an <code class="code-red">endpoint_url</code> object, and call the endpoints by stating <code class="code-red">endpoint_url.[ENDPOINT] </code> For example, if you want sports simply call <code class="code-red">endpoint_url.sports</code>, or if you want athletes, call <code class="code-red">endpoint_url.athletes</code>.</p>

                            <h4 class="mt-4">POST</h4>
                            <table class="table endpoints-table">
                                <thead>
                                        <tr>
                                            <th>Category</th>
                                            <th>Endpoint</th>
                                            <th>Parameter</th>
                                            <th>Description</th>
                                        </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="lead">Authentication</td>
                                        <td><code>.token</code></td>
                                        <td> <code>email</code> as string
                                        <p> <code>password</code> as string </p> </td>
                                        <td>Get new JSON Web Token.</td>
                                    </tr>
                                </tbody>
                            <table>
                            <h4 class="mt-4">GET</h4>
                            <table class="table endpoints-table">
                                <thead>
                                    <tr>
                                        <th>Category</th>
                                        <th>Endpoint</th>
                                        <th>Parameter</th>
                                        <th>Description</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="lead">Sports</td>
                                        <td><code>.sports</code></td>
                                        <td></td>
                                        <td>Gets all sports.</td>
                                    </tr>
                                    <tr>
                                        <td style="border-top:none"></td>
                                        <td><code>.sports + '/id'</code></td>
                                        <td><code>id</code>as integer</td>
                                        <td>Gets a single sport.</td>
                                    </tr>
                                    <tr>
                                        <td class="lead">Disciplines</td>
                                        <td><code>.disciplines</code></td>
                                        <td></td>
                                        <td>Get all disciplines.</td>
                                    </tr>
                                    <tr>
                                        <td style="border-top:none"></td>
                                        <td><code>.disciplines + '/id'</code></td>
                                        <td><code>id</code> as integer</td>
                                        <td>Get a single discipline.</td>
                                    </tr>
                                    <tr>
                                        <td class="lead">Events</td>
                                        <td><code>.events</code></td>
                                        <td></td>
                                        <td>Get all events</td>
                                    </tr>
                                    <tr>
                                        <td style="border-top:none"></td>
                                        <td><code>.events + '/id'</code></td>
                                        <td><code>id</code> as integer</td>
                                        <td>Get a single event.</td>
                                    </tr>
                                    <tr>
                                        <td class="lead">Olympics</td>
                                        <td><code>.olympics</code></td>
                                        <td></td>
                                        <td>Get all olympics.</td>
                                    </tr>
                                    <tr>
                                        <td style="border-top:none"></td>
                                        <td><code>.olympics + '/id'</code></td>
                                        <td><code>id</code> as integer</td>
                                        <td>Get a single olympics.</td>
                                    </tr>
                                    <tr>
                                        <td class="lead">Countries</td>
                                        <td><code>.countries</code></td>
                                        <td></td>
                                        <td>Get all countries.</td>
                                    </tr>
                                    <tr>
                                        <td style="border-top:none"></td>
                                        <td><code>.countries + '/id'</code></td>
                                        <td><code>id</code> as integer</td>
                                        <td>Get a single country.</td>
                                    </tr>
                                    <tr>
                                        <td class="lead">Athletes</td>
                                        <td><code>.athletes</code></td>
                                        <td></td>
                                        <td>Get all athletes</td>
                                    </tr>
                                    <tr>
                                        <td style="border-top:none"></td>
                                        <td><code>.athletes + '/id'</code></td>
                                        <td><code>id</code> as integer</td>
                                        <td>Get a single athlete.</td>
                                    </tr>
                                    <tr>
                                        <td class="lead">Medals</td>
                                        <td><code>.medals</code></td>
                                        <td></td>
                                        <td>Get all medals.</td>
                                    </tr>
                                    <tr>
                                        <td style="border-top:none"></td>
                                        <td><code>.medals + '/id'</code></td>
                                        <td><code>id</code> as integer</td>
                                        <td>Get a single medal.</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </section>
                    
                </div>
            </div>
            <hr>
            <section id="tryserver">
                <h3 class="display-4 mb-4">Try Server</h3>
                <p class="lead font-weight-bold">The area to the right is dedicated to trying out requests!</p>

                <p>The black bar at the top allows you to type the endpoint you wish to access along with the subsequent parameters. Press <code>[ENTER]</code>, and the results will display in the <code>Response</code> section.</p>

                <p>The <code>Request</code> section has a dropdown of select languages that allows you to see how to make your call.</p>

                <hr>

            


            </section>
        </div>

        <div class="col-4 right-example pt-2 px-0 mx-0">
            <div class="mx-0 px-0 mb-4 mt-2 py-4 dark-url-div">
                <div class="full-url"><span class="http-method mx-2">GET</span> <span class="root-url">https://olympicapi.herokuapp.com/api/</span><input class="dark-input-url m-0 p-0" value="olympics?page=3&per_page=18"></input> <span class="endpoint-url"></span><span class="parameters-url"></span></div>
            </div>           
            
            <div class="dark-request-header mx-2 d-flex align-items-center justify-content-between">
                <h3 class="text-muted ml-4 mb-4 my-auto">Request</h3>
                <div class="dropdown mx-4 my-auto">
                    <button class=" btn btn-secondary dropdown-toggle dark-language-button dark-dropdowns-button" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Language
                    </button>
                    <div class="dropdown-menu dark-dropdowns dark-language-menu" aria-labelledby="dropdownMenuButton">
                        <a class="dropdown-item" href="#">cURL</a>
                        <a class="dropdown-item" href="#">JavaScript</a>
                        <a class="dropdown-item" href="#">Ruby</a>
                        <a class="dropdown-item" href="#">Python</a>
                        <a class="dropdown-item" href="#">Node</a>
                        <a class="dropdown-item" href="#">c#</a>
                    </div>
                </div>
            </div>

            <div class="dark-request-example my-4 mx-auto text-white d-flex">
                <div class="code-block-dark dark-language-div mx-0 onetwolineheight pl-2">
                    
                </div>
            </div>

            <div class="dark-request-header mx-2 d-flex align-items-center">
                <h3 class="text-muted ml-4 mb-4 my-auto">Response</h3>
            </div>

            <div class="dark-response-example my-4 mx-auto text-white d-flex">
                <div class="dark-response-div text-white code-block-dark mx-0 pl-2 onetwolineheight">
                    <pre class="my-1 dark-response-pre"></pre>
                </div>
            </div>


        </div>
</div>